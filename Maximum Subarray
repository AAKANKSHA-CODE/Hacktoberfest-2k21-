Question: Maximum Subarray
---------------------------------
Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.
A subarray is a contiguous part of an array.
---------------------------------------
Example 1:
Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.

let's Code-------------------

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        //size of vector array
        int n = nums.size();
        //decleare 2 pointer for storing the sum value 
        int sum = 0;
        int maxSum = INT_MIN;
        //Traverse a loop from vector array of first to last index 
        for(int i=0;i<n;i++){
            sum = sum+nums[i];
            if(maxSum<sum){
                maxSum = sum;
            }
            //if sum value is negative the I need to restore sum value
            if(sum<0){
                sum = 0;
            }
        }
        return maxSum;
    }
};
